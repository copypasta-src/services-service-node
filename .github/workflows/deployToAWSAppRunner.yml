name: Deploy to AWS App Runner

on:

  pull_request:
    types:
      - closed
    branches:
      - xxx

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your AWS region

      - name: Get repository name
        id: repo_name
        run: echo "::set-output name=name::$(basename $(pwd))"
      
      - name: Create ECR repository if it doesn't exist
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')
          if ! aws ecr describe-repositories --repository-names $REPO_NAME > /dev/null 2>&1; then
            aws ecr create-repository --repository-name $REPO_NAME
          fi

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.repo_name.outputs.name }} # Change to your repository name
          IMAGE_TAG: latest
          GITHUB_COPYPASTA_APP_CLIENT_ID : ${{ secrets.GH_COPYPASTA_APP_CLIENT_ID }}
          GITHUB_COPYPASTA_APP_CLIENT_SECRET : ${{ secrets.GH_COPYPASTA_APP_CLIENT_SECRET }}
          GH_AUTH_REDIRECT_URL_BASE : ${{ secrets.GH_AUTH_REDIRECT_URL_BASE }}
        run: |
          docker build --build-arg GITHUB_COPYPASTA_APP_CLIENT_ID=$GITHUB_COPYPASTA_APP_CLIENT_ID --build-arg GITHUB_COPYPASTA_APP_CLIENT_SECRET=$GITHUB_COPYPASTA_APP_CLIENT_SECRET --build-arg GH_AUTH_REDIRECT_URL_BASE=$GH_AUTH_REDIRECT_URL_BASE -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

