name: Deploy to AWS App Runner

on:
  push:
    branches:
      - development

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Change to your AWS region

      - name: Get repository name
        id: repo_name
        run: echo "::set-output name=name::$(basename $(pwd))"
      
      - name: Create ECR repository if it doesn't exist
        run: |
          REPO_NAME=$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}')
          if ! aws ecr describe-repositories --repository-names $REPO_NAME > /dev/null 2>&1; then
            aws ecr create-repository --repository-name $REPO_NAME
          fi

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.repo_name.outputs.name }} # Change to your repository name
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    #   - name: Create App Runner service if it doesn't exist
    #     run: |
    #       SERVICE_NAME=${{ steps.repo_name.outputs.name }}-runner
    #       if ! aws apprunner describe-services --service-name $SERVICE_NAME --region us-east-1 > /dev/null 2>&1; then
    #         echo "App Runner service $SERVICE_NAME does not exist, creating..."
    #         aws apprunner create-service \
    #           --service-name $SERVICE_NAME \
    #           --region us-east-1 \
    #           --source-configuration '{"AuthenticationConfiguration": {"AccessRoleArn" : "arn:aws:iam::508063382320:role/ECR-AppRunner-Access-2"}, "ImageRepository": {"ImageIdentifier": "'${{ steps.login-ecr.outputs.registry }}/${{ steps.repo_name.outputs.name }}:${{ github.sha }}'", "ImageRepositoryType": "ECR"}}'
    #       else
    #         echo "App Runner service $SERVICE_NAME already exists."
    #       fi
      - name: Deploy to AWS App Runner
        env:
          SERVICE_NAME: ${{ steps.repo_name.outputs.name }}-runner # Change to your App Runner service name
          ECR_IMAGE: ${{ steps.login-ecr.outputs.registry }}/${{ steps.repo_name.outputs.name }}:${{ github.sha }}
        run: |
          aws apprunner start-deployment --service-arn arn:aws:apprunner:us-east-1:${{ secrets.AWS_ACCOUNT_ID }}:service/$SERVICE_NAME 
        #   --source-configuration '{"ImageRepository": {"ImageIdentifier": "'$ECR_IMAGE'", "ImageRepositoryType": "ECR"}}'
